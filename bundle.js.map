{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://js-wthr/./src/getIpData.js","webpack://js-wthr/./src/getCityWeather.js","webpack://js-wthr/./src/getCityInput.js","webpack://js-wthr/./node_modules/ymaps/dist/ymaps.esm.js","webpack://js-wthr/./src/createCard.js","webpack://js-wthr/./src/storage.js","webpack://js-wthr/./src/cityClickListener.js","webpack://js-wthr/./src/weatherApp.js","webpack://js-wthr/./src/index.js"],"sourcesContent":["export async function getIpData() {\n  try {\n    const response = await fetch(\"https://ipapi.co/json/\");\n\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n","export async function getCityWeather(ipData) {\n  const MY_KEY = \"56f47affbfbb9ca1677d4f24e14ea341\";\n\n  try {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${ipData.latitude}&lon=${ipData.longitude}&lang=ru&units=metric&appid=${MY_KEY}`\n    );\n\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n","export async function getCityInput(cityName) {\n  const MY_KEY = \"56f47affbfbb9ca1677d4f24e14ea341\";\n\n  try {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&lang=ru&units=metric&appid=${MY_KEY}`\n    );\n\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n","var ymaps$1 = {\n  load: function load() {\n    var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '//api-maps.yandex.ru/2.1/?lang=en_RU';\n\n    var getNsParamValue = function getNsParamValue() {\n      var results = src.match(/[\\\\?&]ns=([^&#]*)/);\n      return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n    };\n\n    if (!this.promise) {\n      this.promise = new Promise(function (resolve, reject) {\n        var scriptElement = document.createElement('script');\n        scriptElement.onload = resolve;\n        scriptElement.onerror = reject;\n        scriptElement.type = 'text/javascript';\n        scriptElement.src = src;\n        document.body.appendChild(scriptElement);\n      }).then(function () {\n        var ns = getNsParamValue();\n\n        if (ns && ns !== 'ymaps') {\n          (0, eval)(\"var ymaps = \".concat(ns, \";\"));\n        }\n\n        return new Promise(function (resolve) {\n          return ymaps.ready(resolve);\n        });\n      });\n    }\n\n    return this.promise;\n  }\n};\n\nexport default ymaps$1;\n","/* eslint-disable no-undef */\nimport ymaps from \"ymaps\";\n\nexport function createCard(el, weatherData) {\n  el.innerHTML = `\n        <div class=\"weather-wrap\">\n          <div class=\"list-city\">\n            <ul></ul>\n          </div>\n          <div class=\"city-info\">\n            <p class=\"city\"><span><b>Город: </b></span>${weatherData.name}</p>\n            <p class=\"temp\"><span><b>Температура: </b></span>${weatherData.main.temp.toFixed(\n              1\n            )} &#8451;</p>\n            <p class=\"weather\"><span><b>Погода: </b></span>${\n              weatherData.weather[0].description\n            }</p>\n            <div class=\"icon\">\n                <img src = \"https://openweathermap.org/img/wn/${\n                  weatherData.weather[0].icon\n                }@2x.png\">\n          </div>\n        </div>\n    `;\n  createMap(el, weatherData);\n}\n\nfunction createMap(el, weatherData) {\n  const map = document.createElement(\"div\");\n  map.setAttribute(\"id\", \"map\");\n  el.querySelector(\".weather-wrap\").append(map);\n\n  try {\n    ymaps.load().then((maps) => {\n      const map = new maps.Map(\"map\", {\n        center: [weatherData.coord.lat, weatherData.coord.lon],\n        zoom: 12,\n      });\n      return maps;\n    });\n  } catch (error) {\n    console.error(\"Failed to load Yandex Maps\", error);\n  }\n}\n","export function readStorage() {\n  const items = JSON.parse(localStorage.getItem(\"city\"));\n  return items || [];\n}\n\nexport function saveStorage(cityName) {\n  const items = readStorage();\n\n  if (items.includes(cityName)) {\n    window.alert(\"Такой город уже добавлен!\");\n    return null;\n  }\n\n  if (items.length === 10) {\n    items.shift();\n  }\n\n  items.push(cityName);\n  localStorage.setItem(\"city\", JSON.stringify(items));\n}\n\nexport function showStorage(items, el) {\n  el.innerHTML = `\n        ${items.map((item) => `<li>${item}</li>`).join(\"\")}\n    `;\n}\n","import { getCityInput } from \"./getCityInput\";\nimport { createCard } from \"./createCard\";\n\nexport function cityClickListener() {\n  const cityList = document.querySelectorAll(\"div.list-city > ul > li\");\n  cityList.forEach((city) => {\n    city.addEventListener(\"click\", async () => {\n      const cityName = city.textContent;\n      const container = document.querySelector(\".container\");\n      const weatherData = await getCityInput(cityName);\n      createCard(container, weatherData);\n    });\n  });\n}\n","import { getIpData } from \"./getIpData\";\nimport { getCityWeather } from \"./getCityWeather\";\nimport { getCityInput } from \"./getCityInput\";\nimport { createCard } from \"./createCard\";\nimport { readStorage, saveStorage, showStorage } from \"./storage\";\nimport { cityClickListener } from \"./cityClickListener\";\n\nexport async function weatherApp(el) {\n  el.innerHTML = `\n        <div class=\"container\">\n        </div>\n    `;\n\n  const container = document.querySelector(\".container\");\n\n  const items = await readStorage();\n  const ipData = await getIpData();\n  const weatherData = await getCityWeather(ipData);\n\n  const weatherCard = container;\n\n  createCard(weatherCard, weatherData);\n\n  container.innerHTML += `\n  <div class=\"form-wrap\">\n          <form class=\"search-form\">\n              <label class=\"search-form__label\">Город: </label>\n              <input class=\"search-form__input\" type=\"text\" placeholder=\"Введите название города\" required />\n              <button class=\"search-form__button\">Отправить</button>\n          </form>\n  </div>\n  `;\n\n  const ul = document.querySelector(\"div.list-city ul\");\n  showStorage(items, ul);\n  inputSubmitListener();\n  cityClickListener();\n}\n\nexport function inputSubmitListener() {\n  const form = document.querySelector(\"form\");\n  const input = document.querySelector(\"input\");\n  const container = document.querySelector(\".container\");\n\n  form.addEventListener(\"submit\", async (e) => {\n    e.preventDefault();\n\n    const cityName = input.value;\n    const weatherData = await getCityInput(cityName);\n\n    if (!weatherData) {\n      alert(`Город '${cityName}' не найден!`);\n      return null;\n    }\n\n    createCard(container, weatherData);\n\n    saveStorage(cityName);\n    const items = await readStorage();\n    const ul = document.querySelector(\"div.list-city ul\");\n    showStorage(items, ul);\n    input.value = \"\";\n    cityClickListener();\n  });\n}\n","import { weatherApp } from \"./weatherApp\";\nimport \"../public/css/style.scss\";\n\nconst el = document.querySelector(\"#app\");\nweatherApp(el);\n"],"names":["getIpData","fetch","response","ok","json","data","console","log","getCityWeather","ipData","latitude","longitude","error","getCityInput","cityName","ymaps$1","load","src","arguments","length","undefined","getNsParamValue","results","match","decodeURIComponent","replace","this","promise","Promise","resolve","reject","scriptElement","document","createElement","onload","onerror","type","body","appendChild","then","ns","eval","concat","ymaps","ready","createCard","el","weatherData","innerHTML","name","main","temp","toFixed","weather","description","icon","map","setAttribute","querySelector","append","maps","Map","center","coord","lat","lon","zoom","createMap","readStorage","JSON","parse","localStorage","getItem","saveStorage","items","includes","window","alert","shift","push","setItem","stringify","showStorage","item","join","i","cityClickListener","querySelectorAll","forEach","city","addEventListener","textContent","container","ul","inputSubmitListener","form","input","e","preventDefault","value","weatherApp"],"sourceRoot":""}